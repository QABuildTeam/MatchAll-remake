//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity removeTypeAndColorEntity { get { return GetGroup(GameMatcher.RemoveTypeAndColor).GetSingleEntity(); } }
    public MatchAll.Game.RemoveTypeAndColorComponent removeTypeAndColor { get { return removeTypeAndColorEntity.removeTypeAndColor; } }
    public bool hasRemoveTypeAndColor { get { return removeTypeAndColorEntity != null; } }

    public GameEntity SetRemoveTypeAndColor(MatchAll.ShapeDefinition newShapeDefinition) {
        if (hasRemoveTypeAndColor) {
            throw new Entitas.EntitasException("Could not set RemoveTypeAndColor!\n" + this + " already has an entity with MatchAll.Game.RemoveTypeAndColorComponent!",
                "You should check if the context already has a removeTypeAndColorEntity before setting it or use context.ReplaceRemoveTypeAndColor().");
        }
        var entity = CreateEntity();
        entity.AddRemoveTypeAndColor(newShapeDefinition);
        return entity;
    }

    public void ReplaceRemoveTypeAndColor(MatchAll.ShapeDefinition newShapeDefinition) {
        var entity = removeTypeAndColorEntity;
        if (entity == null) {
            entity = SetRemoveTypeAndColor(newShapeDefinition);
        } else {
            entity.ReplaceRemoveTypeAndColor(newShapeDefinition);
        }
    }

    public void RemoveRemoveTypeAndColor() {
        removeTypeAndColorEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MatchAll.Game.RemoveTypeAndColorComponent removeTypeAndColor { get { return (MatchAll.Game.RemoveTypeAndColorComponent)GetComponent(GameComponentsLookup.RemoveTypeAndColor); } }
    public bool hasRemoveTypeAndColor { get { return HasComponent(GameComponentsLookup.RemoveTypeAndColor); } }

    public void AddRemoveTypeAndColor(MatchAll.ShapeDefinition newShapeDefinition) {
        var index = GameComponentsLookup.RemoveTypeAndColor;
        var component = (MatchAll.Game.RemoveTypeAndColorComponent)CreateComponent(index, typeof(MatchAll.Game.RemoveTypeAndColorComponent));
        component.shapeDefinition = newShapeDefinition;
        AddComponent(index, component);
    }

    public void ReplaceRemoveTypeAndColor(MatchAll.ShapeDefinition newShapeDefinition) {
        var index = GameComponentsLookup.RemoveTypeAndColor;
        var component = (MatchAll.Game.RemoveTypeAndColorComponent)CreateComponent(index, typeof(MatchAll.Game.RemoveTypeAndColorComponent));
        component.shapeDefinition = newShapeDefinition;
        ReplaceComponent(index, component);
    }

    public void RemoveRemoveTypeAndColor() {
        RemoveComponent(GameComponentsLookup.RemoveTypeAndColor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRemoveTypeAndColor;

    public static Entitas.IMatcher<GameEntity> RemoveTypeAndColor {
        get {
            if (_matcherRemoveTypeAndColor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RemoveTypeAndColor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRemoveTypeAndColor = matcher;
            }

            return _matcherRemoveTypeAndColor;
        }
    }
}
